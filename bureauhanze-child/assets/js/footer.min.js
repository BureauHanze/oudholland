function openPopup(e){document.getElementById(e).classList.toggle("active")}const openFaqContainer=document.querySelectorAll(".info__faq > .faq-item");for(let e=0;e<openFaqContainer.length;e++)openFaqContainer[e].onclick=function(){if(openFaqContainer[e].classList.contains("active"))openFaqContainer[e].classList.remove("active");else{for(let e of openFaqContainer)e.classList.remove("active");openFaqContainer[e].classList.add("active")}};function closePopup(e){document.getElementById(e).classList.remove("active")}function openSpecs(e){document.getElementById(e).classList.toggle("active");var t=document.querySelector("#specsWrap > div.more__specs");"Minder specificaties"===t.innerHTML?t.innerHTML="Meer specificaties":t.innerHTML="Minder specificaties"}function openFilters(e){document.getElementById(e).classList.toggle("active");var t=document.querySelector(".product-category__filters"),o=document.querySelector(".more-btn svg");t.classList.toggle("--active"),o.classList.toggle("svg--active");var n=document.querySelector(".more__specs");"Filters verbergen"===n.innerHTML?n.innerHTML="Filters weergeven":n.innerHTML="Filters verbergen"}function setCookie(e,t,o){var n="";if(o){var c=new Date;c.setTime(c.getTime()+1*o*60*60*1e3),n="; expires="+c.toUTCString()}document.cookie=e+"="+(t||"")+n+"; path=/"}function getCookie(e){for(var t=e+"=",o=document.cookie.split(";"),n=0;n<o.length;n++){for(var c=o[n];" "==c.charAt(0);)c=c.substring(1,c.length);if(0==c.indexOf(t))return c.substring(t.length,c.length)}return null}var popupCookie=getCookie("popupCookie");document.getElementById("can-i-help-popup").style.display=popupCookie?"none":"block",document.getElementById("can-i-help--close").onclick=function(){document.getElementById("can-i-help-popup").style.display="none",setCookie("popupCookie","popupCookievalue",7)};const addToCartButton=document.querySelector(".composite_data > div > div.composite_button"),productID=document.querySelector(".composite_data > div > div.composite_button > input[type=hidden]");if(addToCartButton&&addToCartButton.addEventListener("click",(function(){sessionStorage.setItem("productID",productID.value)})),window.sessionStorage.getItem("productID")){const e=document.getElementById("popup-accessoires"),t=document.getElementById("productAddedModalStandard"),o=document.getElementById("productAddedModalAdvanced");e?(o.style.display="block",o.classList.add("fade-in-bottom")):(t.style.display="block",t.classList.add("fade-in-bottom")),sessionStorage.clear()}function closePAM(){const e=document.getElementById("productAddedModalStandard"),t=document.getElementById("productAddedModalAdvanced");e.classList.remove("fade-in-bottom"),e.style.display="none",t.classList.remove("fade-in-bottom"),t.style.display="none",sessionStorage.clear()}const formProjectinrichting=document.querySelector(".wpcf7-form"),formStepBtnNext=document.getElementById("step__button-next"),formStepOne=document.querySelector(".step__one"),formStepTwo=document.querySelector(".step__two"),formSubmit=document.querySelector(".wpcf7-submit");function waitForElm(e){return new Promise((t=>{if(document.querySelector(e))return t(document.querySelector(e));const o=new MutationObserver((n=>{document.querySelector(e)&&(t(document.querySelector(e)),o.disconnect())}));o.observe(document.body,{childList:!0,subtree:!0})}))}function validateOptons(){performance.getEntriesByType("resource");performance.getEntriesByType("resource").filter((e=>"Rectangle-Copy-14.png"==e.name));var e=document.getElementsByClassName("component_option_thumbnails");const t=document.querySelector("div > div.composite_button > .single_add_to_cart_button");var o=0,n=0;for(let t of e){let e=t.children;o+=1;for(let t of e){let e=t.children;var c=0;for(let t of e)1,t.children[0].classList.contains("selected")&&(c+=1);c&&(n+=1)}}t&&(n===o?(t.style.opacity=1,t.style.pointerEvents="all"):(t.style.opacity=.6,t.style.pointerEvents="none"))}formProjectinrichting&&(formStepBtnNext.addEventListener("click",(function(e){formStepOne.style.display="none",formStepTwo.style.display="block"})),formSubmit.addEventListener("click",(function(e){waitForElm(".invalid").then((e=>{formStepOne.style.display="block",formStepTwo.style.display="block",formStepBtnNext.style.display="none"}))}))),window.addEventListener("load",(function(){document.querySelector("div.component_inner > div.component_selections > div.component_content > .component_summary > .product"),validateOptons();var e=document.getElementsByClassName("component_options_load_more");e[0]&&e[0].addEventListener("click",(()=>{setTimeout((()=>{validateOptons()}),2e3)}));var t=document.getElementsByClassName("product_summary");t[0]&&t[0].addEventListener("click",(()=>{validateOptons()}))})),document.addEventListener("DOMContentLoaded",(function(){var e=document.querySelectorAll(".sub-menu");for(let o=0;o<e.length;o++){var t=document.createElement("div");t.className="sub-menu__overlay",e[o].appendChild(t)}}),!1);
var timeout,top1=!1,bottom=!1;function descPress(){var e=document.getElementById("description"),t=document.querySelector(".tab_info");(top1=!top1)?(e.classList.add("showDesc"),t.classList.add("rotateArrow")):(t.classList.remove("rotateArrow"),e.classList.remove("showDesc"))}function extraPress(){var e=document.getElementById("additional"),t=document.querySelector(".tab_info:nth-child(2)");(bottom=!bottom)?(t.classList.add("rotateArrow"),e.classList.add("showDesc")):(t.classList.remove("rotateArrow"),e.classList.remove("showDesc"))}jQuery(document).ready((function(e){e("form.cart").on("click","button.plus, button.minus",(function(){var t=e(this).closest("form.cart").find(".qty"),o=parseFloat(t.val()),a=parseFloat(t.attr("max")),n=parseFloat(t.attr("min")),s=parseFloat(t.attr("step"));e(this).is(".plus")?a&&a<=o?t.val(a):t.val(o+s):n&&n>=o?t.val(n):o>1&&t.val(o-s)}))})),jQuery((function(e){e(".woocommerce").on("change","input.qty",(function(){void 0!==timeout&&clearTimeout(timeout),timeout=setTimeout((function(){e("[name='update_cart']").trigger("click")}),500)}))}));const voornaam=document.getElementById("billing_first_name"),shipVoornaam=document.getElementById("shipping_first_name"),achternaam=document.getElementById("billing_last_name"),shipAchternaam=document.getElementById("shipping_last_name"),straat=document.getElementById("billing_address_1"),shipStraat=document.getElementById("shipping_address_1"),postcode=document.getElementById("billing_postcode"),shipPostcode=document.getElementById("shipping_postcode"),plaats=document.getElementById("billing_city"),shipPlaats=document.getElementById("shipping_city"),email=document.getElementById("billing_email"),phone=document.getElementById("billing_phone"),line=document.getElementById("tussen1-2"),errorMessage=document.getElementById("formValidation"),diffrentAdress=document.getElementById("ship-to-different-address-checkbox");var progress=12.5;line&&(line.style.width=progress+"%"),allInputs=[voornaam,achternaam,straat,postcode,plaats,email,phone],allInputs.forEach(checkInput);var proceed=!1;function checkInput(e){e&&(e.value&&(progress+=12.5,line.style.width=progress+"%",e.proceed=!0),e.addEventListener("change",(t=>{e.value&&!e.proceed?(progress+=12.5,line.style.width=progress+"%",e.proceed=!0):e.value&&e.proceed||(progress-=12.5,line.style.width=progress+"%",e.proceed=!1)})))}var shipVerder=!1;function nextStepCheckout(){var e=!0;if(shipVerder?shipVoornaam.value&&shipAchternaam.value&&shipStraat.value&&shipPostcode.value&&shipPlaats.value||(e=!1):voornaam.value&&achternaam.value&&straat.value&&postcode.value&&plaats.value&&email.value&&phone.value||(e=!1),e){var t=document.getElementById("checkout_step1"),o=document.getElementById("checkout_step2"),a=document.getElementById("stap1"),n=document.getElementById("stap2");document.getElementById("tussen1-2").style.width="100%",(n||a)&&(n.classList.add("active-class"),a.classList.add("done-class")),window.scrollTo(0,50),t.style.display="none",o.style.display="block",errorMessage.style.display="none"}else errorMessage.style.height="fit-content",errorMessage.style.opacity=1,errorMessage.style.marginBottom="40px",errorMessage.style.padding="5px 25px"}function productModal(e,t,o){var a=document.getElementById("productModal");document.getElementById("productModalInner");document.getElementById("imgWrapper").innerHTML='<a href="'+t+'"><img class="modalProductImage" src="'+o+'"/></a>',document.getElementById("productTitle").innerHTML=e,a.classList.add("modal__cart--active"),pageOverlay.classList.remove("page-overlay"),pageOverlay.classList.add("page-overlay--active")}function closeProductModal(){document.getElementById("productModal").classList.remove("modal__cart--active"),pageOverlay.classList.remove("page-overlay--active"),pageOverlay.classList.add("page-overlay")}function incVAT(){var e=document.querySelector(".composite_data > div > div.compositeprice_wrapper > div.composite_price > p span");if(e){var t=(1.21*e.innerText.replace(/,/g,".")).toFixed(2).replace(".",",");document.getElementById("incVATprice").innerHTML=t}}function watchSelections(){var e=document.querySelectorAll(".variations select, .quantity input");e&&e.forEach((e=>{e.addEventListener("change",(function(){incVAT(),setTimeout(productTotal,600)}))}))}function productTotal(){var e=document.querySelector(".composite_data > div > div.compositeprice_wrapper > div.composite_price > p span"),t=document.querySelector("#productTotals");if(e)var o=e.innerText;t&&(document.querySelector("#productTotals").innerHTML=o)}function incVATtime(){setTimeout(incVAT,500)}diffrentAdress&&diffrentAdress.addEventListener("change",(function(){shipVerder=!shipVerder})),setTimeout((function(){if(document.getElementById("priceWatch")){var e=document.querySelectorAll("select");e&&e.forEach((e=>{e.addEventListener("change",(function(){setTimeout(incVAT,500)}))})),window.addEventListener("click",(function(){setTimeout(incVAT,500)}))}}),600),window.addEventListener("load",(e=>{setTimeout(productTotal,100),setTimeout(incVAT,600);var t=document.querySelectorAll(".radio_button");t&&t.forEach((e=>{e.addEventListener("click",(function(){incVAT(),setTimeout((function(){productTotal(),watchSelections()}),1300)}),{once:!1})}))}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
